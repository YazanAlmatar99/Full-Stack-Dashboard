{"ast":null,"code":"var _jsxFileName = \"/Users/yazanalmatar/Desktop/dashboard/client/src/components/Inventory.js\";\nimport React from \"react\";\nimport InventoryChart from \"./InventoryChart\";\nimport Loading from \"./Loading\";\n\nclass Inventory extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchRequestedId = async props => {\n      const response = await fetch(\"/api/v1/inventory/\".concat(this.state.requestedId), {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        this.setState({\n          response: data\n        });\n        console.log(\"this is after the fetch function\");\n        console.log(this.state.response[0]);\n      });\n    };\n\n    this.state = {\n      requestedId: this.props.match.params.id,\n      response: null\n    };\n  }\n\n  componentDidMount() {\n    this.fetchRequestedId();\n  }\n\n  renderContent() {\n    if (this.state.response) {\n      return React.createElement(InventoryChart, {\n        data: this.state.response,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.renderContent());\n  }\n\n}\n\nexport default Inventory;","map":{"version":3,"sources":["/Users/yazanalmatar/Desktop/dashboard/client/src/components/Inventory.js"],"names":["React","InventoryChart","Loading","Inventory","Component","constructor","props","fetchRequestedId","response","fetch","state","requestedId","method","headers","then","json","data","setState","console","log","match","params","id","componentDidMount","renderContent","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AACA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,gBAXmB,GAWA,MAAMD,KAAN,IAAe;AAChC,YAAME,QAAQ,GAAG,MAAMC,KAAK,6BACL,KAAKC,KAAL,CAAWC,WADN,GAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAFX,OAF0B,CAAL,CASpBC,IAToB,CASfN,QAAQ,IAAI;AAChB,eAAOA,QAAQ,CAACO,IAAT,EAAP;AACD,OAXoB,EAYpBD,IAZoB,CAYfE,IAAI,IAAI;AACZ,aAAKC,QAAL,CAAc;AAAET,UAAAA,QAAQ,EAAEQ;AAAZ,SAAd;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWF,QAAX,CAAoB,CAApB,CAAZ;AACD,OAhBoB,CAAvB;AAiBD,KA7BkB;;AAEjB,SAAKE,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE,KAAKL,KAAL,CAAWc,KAAX,CAAiBC,MAAjB,CAAwBC,EAD1B;AAEXd,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAID;;AACDe,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,gBAAL;AACD;;AAqBDiB,EAAAA,aAAa,GAAG;AACd,QAAI,KAAKd,KAAL,CAAWF,QAAf,EAAyB;AACvB,aAAO,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAG,KAAKE,KAAL,CAAWF,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAEDiB,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKD,aAAL,EAAN,CAAP;AACD;;AAxCqC;;AA0CxC,eAAerB,SAAf","sourcesContent":["import React from \"react\";\nimport InventoryChart from \"./InventoryChart\";\nimport Loading from \"./Loading\";\nclass Inventory extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requestedId: this.props.match.params.id,\n      response: null\n    };\n  }\n  componentDidMount() {\n    this.fetchRequestedId();\n  }\n\n  fetchRequestedId = async props => {\n    const response = await fetch(\n      `/api/v1/inventory/${this.state.requestedId}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({ response: data });\n        console.log(\"this is after the fetch function\");\n        console.log(this.state.response[0]);\n      });\n  };\n  renderContent() {\n    if (this.state.response) {\n      return <InventoryChart data= {this.state.response} />;\n    }\n    return <Loading />;\n  }\n\n  render() {\n    return <div>{this.renderContent()}</div>;\n  }\n}\nexport default Inventory;\n"]},"metadata":{},"sourceType":"module"}