{"ast":null,"code":"var _jsxFileName = \"/Users/yazanalmatar/Desktop/dashboard/client/src/components/InventoryChart.js\";\nimport React from \"react\";\nimport Chart from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nclass InventoryChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = {\n      labels: [\"1\", \"2\", \"3\"],\n      datasets: [{\n        label: \"My First dataset\",\n        //backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        data: [0, 10, 5, 2, 20, 30, 45]\n      }, {\n        label: \"My First dataset\",\n        //backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        data: [0, 10, 1, 3, 20, 30, 45]\n      }]\n    };\n\n    this.handleData = () => {\n      const datasetsData = [];\n      const dates = [];\n      const data = this.state.data; // data.map(dataItem=>{\n      //   console.log(dataItem)\n      // })\n\n      data[0].inventory.map(item => {\n        //console.log(item);\n        // dates.push(item.date);\n        // const datasetsObject = {};\n        // item.variants.map((variant,i )=> {\n        //    datasetsObject.label = data[0].variants.title ;\n        //    const titles = data\n        //    console.log(titles)\n        // });\n        dates.push(item.date.split(\"T\")[0]);\n        console.log(data);\n      });\n    };\n\n    this.state = {\n      data: this.props.data\n    };\n  }\n\n  componentDidMount() {\n    //console.log(this.props.data)\n    this.handleData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chart-comp-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Line, {\n      data: this.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default InventoryChart;","map":{"version":3,"sources":["/Users/yazanalmatar/Desktop/dashboard/client/src/components/InventoryChart.js"],"names":["React","Chart","Line","InventoryChart","Component","constructor","props","data","labels","datasets","label","borderColor","handleData","datasetsData","dates","state","inventory","map","item","push","date","split","console","log","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAUnBC,IAVmB,GAUZ;AACLC,MAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CADH;AAELC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,kBADT;AAEE;AACAC,QAAAA,WAAW,EAAE,mBAHf;AAIEJ,QAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB;AAJR,OADQ,EAOR;AACEG,QAAAA,KAAK,EAAE,kBADT;AAEE;AACAC,QAAAA,WAAW,EAAE,mBAHf;AAIEJ,QAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB;AAJR,OAPQ;AAFL,KAVY;;AAAA,SA+BnBK,UA/BmB,GA+BN,MAAM;AACjB,YAAMC,YAAY,GAAG,EAArB;AACA,YAAMC,KAAK,GAAG,EAAd;AACA,YAAMP,IAAI,GAAG,KAAKQ,KAAL,CAAWR,IAAxB,CAHiB,CAIjB;AACA;AACA;;AACAA,MAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQS,SAAR,CAAkBC,GAAlB,CAAsBC,IAAI,IAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAJ,QAAAA,KAAK,CAACK,IAAN,CAAWD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAX;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;AACD,OAXD;AAYD,KAlDkB;;AAEjB,SAAKQ,KAAL,GAAa;AACXR,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AADN,KAAb;AAGD;;AACDiB,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKZ,UAAL;AACD;;AA0CDa,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKlB,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA1D0C;;AA4D7C,eAAeJ,cAAf","sourcesContent":["import React from \"react\";\nimport Chart from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nclass InventoryChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.data\n    };\n  }\n  componentDidMount() {\n    //console.log(this.props.data)\n    this.handleData();\n  }\n  data = {\n    labels: [\"1\", \"2\", \"3\"],\n    datasets: [\n      {\n        label: \"My First dataset\",\n        //backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        data: [0, 10, 5, 2, 20, 30, 45]\n      },\n      {\n        label: \"My First dataset\",\n        //backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        data: [0, 10, 1, 3, 20, 30, 45]\n      }\n    ]\n  };\n  // convertDate(date) {\n  //   const newDate = date.getFullYear()+'-' + (date.getMonth()+1) + '-'+date.getDate();\n  //   return newDate\n  // }\n  handleData = () => {\n    const datasetsData = [];\n    const dates = [];\n    const data = this.state.data;\n    // data.map(dataItem=>{\n    //   console.log(dataItem)\n    // })\n    data[0].inventory.map(item => {\n      //console.log(item);\n      // dates.push(item.date);\n      // const datasetsObject = {};\n      // item.variants.map((variant,i )=> {\n      //    datasetsObject.label = data[0].variants.title ;\n      //    const titles = data\n      //    console.log(titles)\n      // });\n      dates.push(item.date.split(\"T\")[0] );\n      console.log(data)\n    });\n  };\n  render() {\n    return (\n      <div className=\"chart-comp-container\">\n        <Line data={this.data} />\n      </div>\n    );\n  }\n}\nexport default InventoryChart;\n"]},"metadata":{},"sourceType":"module"}