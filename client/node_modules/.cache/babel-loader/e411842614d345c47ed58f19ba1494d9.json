{"ast":null,"code":"var _jsxFileName = \"/Users/yazanalmatar/Desktop/dashboard/client/src/components/QRCodeGenerator.js\";\nimport React from \"react\";\nimport QRCode from \"qrcode-react\";\n\nclass QRCodeGenerator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandler = event => {\n      this.setState({\n        inputValue: event.target.value\n      });\n      var inputText = this.state.inputValue;\n\n      if (inputText.indexOf(\"youtube.\") >= 0 && inputText.indexOf(\" \") === -1) {\n        document.getElementById(\"qr-generator-label\").style.color = \"green\";\n        var youtubeURLARR = inputText.split(\"watch?v=\");\n        this.setState({\n          downloadName: youtubeURLARR[1]\n        });\n      } else {\n        document.getElementById(\"qr-generator-label\").style.color = \"red\";\n      }\n    };\n\n    this.prepHref = () => {\n      var myDiv = document.getElementById(\"generate-qr-wrapper\");\n      var canvas = myDiv.children[0];\n      var img = canvas.toDataURL(\"image/png\");\n      const rawURL = img;\n      const finalURL = rawURL.replace(\"data:image/png;base64,\", \"data:application/octet-stream;base64,\");\n      this.setState({\n        url: finalURL\n      });\n    };\n\n    this.state = {\n      inputValue: \"\",\n      url: \"\",\n      downloadName: \"\"\n    }; //s\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"generate-qr-main-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      id: \"generate_qr_input\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"generate-qr-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(QRCode, {\n      value: this.state.inputValue,\n      logo: require(\"../assets/analuisa-icon.png\"),\n      logoWidth: 40,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"a\", {\n      onClick: this.prepHref,\n      href: this.state.url,\n      download: this.state.downloadName,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Click To Download\"), React.createElement(\"div\", {\n      className: \"qr-size-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"add\")), React.createElement(\"button\", {\n      class: \"mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"-\")), React.createElement(\"label\", {\n      id: \"qr-generator-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.inputValue));\n  }\n\n}\n\nexport default QRCodeGenerator;","map":{"version":3,"sources":["/Users/yazanalmatar/Desktop/dashboard/client/src/components/QRCodeGenerator.js"],"names":["React","QRCode","QRCodeGenerator","Component","constructor","props","onChangeHandler","event","setState","inputValue","target","value","inputText","state","indexOf","document","getElementById","style","color","youtubeURLARR","split","downloadName","prepHref","myDiv","canvas","children","img","toDataURL","rawURL","finalURL","replace","url","render","require"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport QRCode from \"qrcode-react\";\n\nclass QRCodeGenerator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      url: \"\",\n      downloadName: \"\"\n    }; //s\n  }\n  onChangeHandler = event => {\n    this.setState({ inputValue: event.target.value });\n    var inputText = this.state.inputValue;\n    if (inputText.indexOf(\"youtube.\") >= 0 && inputText.indexOf(\" \") === -1) {\n      document.getElementById(\"qr-generator-label\").style.color = \"green\";\n      var youtubeURLARR = inputText.split(\"watch?v=\");\n      this.setState({ downloadName: youtubeURLARR[1] });\n    } else {\n      document.getElementById(\"qr-generator-label\").style.color = \"red\";\n    }\n  };\n  prepHref = () => {\n    var myDiv = document.getElementById(\"generate-qr-wrapper\");\n    var canvas = myDiv.children[0];\n    var img = canvas.toDataURL(\"image/png\");\n    const rawURL = img;\n    const finalURL = rawURL.replace(\n      \"data:image/png;base64,\",\n      \"data:application/octet-stream;base64,\"\n    );\n    this.setState({ url: finalURL });\n  };\n\n  render() {\n    return (\n      <div className=\"generate-qr-main-wrapper\">\n        <input\n          type=\"text\"\n          id=\"generate_qr_input\"\n          onChange={this.onChangeHandler}\n        />\n        <div id=\"generate-qr-wrapper\">\n          <QRCode\n            value={this.state.inputValue}\n            logo={require(\"../assets/analuisa-icon.png\")}\n            logoWidth={40}\n          />\n        </div>\n        <a\n          onClick={this.prepHref}\n          href={this.state.url}\n          download={this.state.downloadName}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Click To Download\n        </a>\n        <div className=\"qr-size-buttons\">\n        <button class=\"mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored\">\n          <i class=\"material-icons\">add</i>\n        </button>\n        <button class=\"mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored\">\n          -\n        </button>\n        </div>\n        \n        <label id=\"qr-generator-label\">{this.state.inputValue}</label>\n      </div>\n    );\n  }\n}\n\nexport default QRCodeGenerator;\n"]},"metadata":{},"sourceType":"module"}