{"ast":null,"code":"var _jsxFileName = \"/Users/yazanalmatar/Desktop/dashboard/client/src/components/InventoryChart.js\";\nimport React from \"react\";\nimport Chart from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nclass InventoryChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = {\n      labels: [\"1\", \"2\", \"3\"],\n      datasets: [{\n        label: \"My First dataset\",\n        //backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        data: [0, 10, 5, 2, 20, 30, 45]\n      }, {\n        label: \"My First dataset\",\n        //backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        data: [0, 10, 1, 3, 20, 30, 45]\n      }]\n    };\n\n    this.handleData = () => {\n      const datasetsData = [];\n      const dates = [];\n      const data = this.state.data;\n      console.log(data[0]);\n      data[0].inventory.map(item => {\n        dates.push(item.date.split(\"T\")[0]);\n        data[0].variants.map(variant => {\n          var dataObject = {\n            label: \"\",\n            borderColor: \"rgb(255, 99, 132)\",\n            data: []\n          };\n          datasetsData.label = variant.title;\n          data;\n        });\n      });\n      console.log(data[0].variants);\n    };\n\n    this.state = {\n      data: this.props.data\n    };\n  }\n\n  componentDidMount() {\n    //console.log(this.props.data)\n    this.handleData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chart-comp-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Line, {\n      data: this.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default InventoryChart;","map":{"version":3,"sources":["/Users/yazanalmatar/Desktop/dashboard/client/src/components/InventoryChart.js"],"names":["React","Chart","Line","InventoryChart","Component","constructor","props","data","labels","datasets","label","borderColor","handleData","datasetsData","dates","state","console","log","inventory","map","item","push","date","split","variants","variant","dataObject","title","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAUnBC,IAVmB,GAUZ;AACLC,MAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CADH;AAELC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,kBADT;AAEE;AACAC,QAAAA,WAAW,EAAE,mBAHf;AAIEJ,QAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB;AAJR,OADQ,EAOR;AACEG,QAAAA,KAAK,EAAE,kBADT;AAEE;AACAC,QAAAA,WAAW,EAAE,mBAHf;AAIEJ,QAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB;AAJR,OAPQ;AAFL,KAVY;;AAAA,SA4BnBK,UA5BmB,GA4BN,MAAM;AACjB,YAAMC,YAAY,GAAG,EAArB;AACA,YAAMC,KAAK,GAAG,EAAd;AACA,YAAMP,IAAI,GAAG,KAAKQ,KAAL,CAAWR,IAAxB;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAAC,CAAD,CAAhB;AAEAA,MAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQW,SAAR,CAAkBC,GAAlB,CAAsBC,IAAI,IAAI;AAC5BN,QAAAA,KAAK,CAACO,IAAN,CAAWD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAX;AACAhB,QAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQiB,QAAR,CAAiBL,GAAjB,CAAqBM,OAAO,IAAI;AAC9B,cAAIC,UAAU,GAAG;AACfhB,YAAAA,KAAK,EAAE,EADQ;AAEfC,YAAAA,WAAW,EAAE,mBAFE;AAGfJ,YAAAA,IAAI,EAAE;AAHS,WAAjB;AAKAM,UAAAA,YAAY,CAACH,KAAb,GAAqBe,OAAO,CAACE,KAA7B;AACApB,UAAAA,IAAI;AACL,SARD;AASD,OAXD;AAaAS,MAAAA,OAAO,CAACC,GAAR,CAAYV,IAAI,CAAC,CAAD,CAAJ,CAAQiB,QAApB;AACD,KAhDkB;;AAEjB,SAAKT,KAAL,GAAa;AACXR,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AADN,KAAb;AAGD;;AACDqB,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKhB,UAAL;AACD;;AAwCDiB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAKtB,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAxD0C;;AA0D7C,eAAeJ,cAAf","sourcesContent":["import React from \"react\";\nimport Chart from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nclass InventoryChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.data\n    };\n  }\n  componentDidMount() {\n    //console.log(this.props.data)\n    this.handleData();\n  }\n  data = {\n    labels: [\"1\", \"2\", \"3\"],\n    datasets: [\n      {\n        label: \"My First dataset\",\n        //backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        data: [0, 10, 5, 2, 20, 30, 45]\n      },\n      {\n        label: \"My First dataset\",\n        //backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        data: [0, 10, 1, 3, 20, 30, 45]\n      }\n    ]\n  };\n\n  handleData = () => {\n    const datasetsData = [];\n    const dates = [];\n    const data = this.state.data;\n    console.log(data[0]);\n\n    data[0].inventory.map(item => {     \n      dates.push(item.date.split(\"T\")[0]);\n      data[0].variants.map(variant => {\n        var dataObject = {\n          label: \"\",\n          borderColor: \"rgb(255, 99, 132)\",\n          data: []\n        };\n        datasetsData.label = variant.title;\n        data\n      });\n    });\n\n    console.log(data[0].variants);\n  };\n  render() {\n    return (\n      <div className=\"chart-comp-container\">\n        <Line data={this.data} />\n      </div>\n    );\n  }\n}\nexport default InventoryChart;\n"]},"metadata":{},"sourceType":"module"}