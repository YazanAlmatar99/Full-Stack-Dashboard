{"ast":null,"code":"var _jsxFileName = \"/Users/yazanalmatar/Desktop/dashboard/client/src/components/InventoryChart.js\";\nimport React from \"react\";\nimport Chart from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nclass InventoryChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = {\n      labels: [\"1\", \"2\", \"3\"],\n      datasets: [{\n        label: \"My First dataset\",\n        //backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        data: [0, 10, 5, 2, 20, 30, 45]\n      }, {\n        label: \"My First dataset\",\n        //backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        data: [0, 10, 1, 3, 20, 30, 45]\n      }]\n    };\n\n    this.handleData = () => {\n      const datasetsData = [];\n      const dates = [];\n      const data = this.state.data;\n      var datesArray = data[0].inventory;\n      newDatesArray = [];\n      datesArray.map(item => {\n        var value = item.date.split(\"T\")[0];\n        newDatesArray.push(value);\n      });\n\n      function SortDate(temp1, temp2) {\n        datesArray.sort(function (temp1p, temp2) {\n          return new Date(temp1.date) - new Date(temp2.date);\n        });\n      }\n\n      console.log(data[0].inventory);\n\n      for (var i = 0; i < datesArray.length; i++) {\n        const temp1 = datesArray[i];\n        const temp2 = datesArray[i + 1];\n        SortDate(temp1, temp2);\n      }\n\n      console.log(datesArray);\n    };\n\n    this.state = {\n      data: this.props.data\n    };\n  }\n\n  componentDidMount() {\n    //console.log(this.props.data)\n    this.handleData();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"chart-comp-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Line, {\n      data: this.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default InventoryChart;","map":{"version":3,"sources":["/Users/yazanalmatar/Desktop/dashboard/client/src/components/InventoryChart.js"],"names":["React","Chart","Line","InventoryChart","Component","constructor","props","data","labels","datasets","label","borderColor","handleData","datasetsData","dates","state","datesArray","inventory","newDatesArray","map","item","value","date","split","push","SortDate","temp1","temp2","sort","temp1p","Date","console","log","i","length","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAUnBC,IAVmB,GAUZ;AACLC,MAAAA,MAAM,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CADH;AAELC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,kBADT;AAEE;AACAC,QAAAA,WAAW,EAAE,mBAHf;AAIEJ,QAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB;AAJR,OADQ,EAOR;AACEG,QAAAA,KAAK,EAAE,kBADT;AAEE;AACAC,QAAAA,WAAW,EAAE,mBAHf;AAIEJ,QAAAA,IAAI,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX,EAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB;AAJR,OAPQ;AAFL,KAVY;;AAAA,SA4BnBK,UA5BmB,GA4BN,MAAM;AACjB,YAAMC,YAAY,GAAG,EAArB;AACA,YAAMC,KAAK,GAAG,EAAd;AACA,YAAMP,IAAI,GAAG,KAAKQ,KAAL,CAAWR,IAAxB;AACA,UAAIS,UAAU,GAAGT,IAAI,CAAC,CAAD,CAAJ,CAAQU,SAAzB;AACAC,MAAAA,aAAa,GAAG,EAAhB;AACAF,MAAAA,UAAU,CAACG,GAAX,CAAeC,IAAI,IAAE;AAClB,YAAIC,KAAK,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqB,CAArB,CAAZ;AACAL,QAAAA,aAAa,CAACM,IAAd,CAAmBH,KAAnB;AACF,OAHD;;AAKA,eAASI,QAAT,CAAkBC,KAAlB,EAAyBC,KAAzB,EAAgC;AAC9BX,QAAAA,UAAU,CAACY,IAAX,CAAgB,UAASC,MAAT,EAAiBF,KAAjB,EAAwB;AACtC,iBAAO,IAAIG,IAAJ,CAASJ,KAAK,CAACJ,IAAf,IAAuB,IAAIQ,IAAJ,CAASH,KAAK,CAACL,IAAf,CAA9B;AACD,SAFD;AAGD;;AACDS,MAAAA,OAAO,CAACC,GAAR,CAAYzB,IAAI,CAAC,CAAD,CAAJ,CAAQU,SAApB;;AACA,WAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,UAAU,CAACkB,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,cAAMP,KAAK,GAAGV,UAAU,CAACiB,CAAD,CAAxB;AACA,cAAMN,KAAK,GAAGX,UAAU,CAACiB,CAAC,GAAG,CAAL,CAAxB;AACAR,QAAAA,QAAQ,CAACC,KAAD,EAAQC,KAAR,CAAR;AACD;;AACDI,MAAAA,OAAO,CAACC,GAAR,CAAYhB,UAAZ;AACD,KAnDkB;;AAEjB,SAAKD,KAAL,GAAa;AACXR,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AADN,KAAb;AAGD;;AACD4B,EAAAA,iBAAiB,GAAG;AAClB;AACA,SAAKvB,UAAL;AACD;;AA2CDwB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAE,KAAK7B,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AA3D0C;;AA6D7C,eAAeJ,cAAf","sourcesContent":["import React from \"react\";\nimport Chart from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nclass InventoryChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.data\n    };\n  }\n  componentDidMount() {\n    //console.log(this.props.data)\n    this.handleData();\n  }\n  data = {\n    labels: [\"1\", \"2\", \"3\"],\n    datasets: [\n      {\n        label: \"My First dataset\",\n        //backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        data: [0, 10, 5, 2, 20, 30, 45]\n      },\n      {\n        label: \"My First dataset\",\n        //backgroundColor: \"rgb(255, 99, 132)\",\n        borderColor: \"rgb(255, 99, 132)\",\n        data: [0, 10, 1, 3, 20, 30, 45]\n      }\n    ]\n  };\n\n  handleData = () => {\n    const datasetsData = [];\n    const dates = [];\n    const data = this.state.data;\n    var datesArray = data[0].inventory;\n    newDatesArray = []\n    datesArray.map(item=>{\n       var value = item.date.split(\"T\")[0]\n       newDatesArray.push(value)\n    })\n  \n    function SortDate(temp1, temp2) {\n      datesArray.sort(function(temp1p, temp2) {\n        return new Date(temp1.date) - new Date(temp2.date);\n      });\n    }\n    console.log(data[0].inventory);\n    for (var i = 0; i < datesArray.length; i++) {\n      const temp1 = datesArray[i];\n      const temp2 = datesArray[i + 1];\n      SortDate(temp1, temp2);\n    }\n    console.log(datesArray);\n  };\n  render() {\n    return (\n      <div className=\"chart-comp-container\">\n        <Line data={this.data} />\n      </div>\n    );\n  }\n}\nexport default InventoryChart;\n"]},"metadata":{},"sourceType":"module"}