{"ast":null,"code":"var _jsxFileName = \"/Users/yazanalmatar/Desktop/dashboard/client/src/components/ProductComponent.js\";\nimport React from \"react\";\nimport \"../App.css\";\n\nconst ProductComponenet = props => {\n  var variants = props.variants;\n  var totalInventory = 0;\n  var numberOfVariants = variants.length;\n  variants.map(item => {\n    totalInventory = item.inventory_quantity + totalInventory;\n  });\n\n  componentDidMount = () => {\n    fetchRequestedId = async props => {\n      const response = await fetch(\"/api/v1/inventory/\".concat(this.state.requestedId), {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {\n        this.setState({\n          response: data\n        });\n        this.daysDiffFinder();\n        this.getInStock();\n        this.velocityFinder();\n        console.log(this.state.velocityObject, \"after then function\");\n      });\n    };\n  };\n\n  return React.createElement(\"div\", {\n    className: \"product-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"product-image-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"demo-card-image mdl-card mdl-shadow--2dp\",\n    style: {\n      background: \" url(\".concat(props.image, \") center / cover\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mdl-card__title mdl-card--expand\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"mdl-card__actions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"demo-card-image__filename\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"product-des-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, props.variants[0].price), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, totalInventory, numberOfVariants == 1 ? '' : \" of \".concat(numberOfVariants)), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.product_type), React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.title)), React.createElement(\"a\", {\n    href: \"/a/dashboard/products/inventory/\".concat(props.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    class: \"mdl-button mdl-js-button mdl-button--raised mdl-button--colored\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Details\")));\n};\n\nexport default ProductComponenet;","map":{"version":3,"sources":["/Users/yazanalmatar/Desktop/dashboard/client/src/components/ProductComponent.js"],"names":["React","ProductComponenet","props","variants","totalInventory","numberOfVariants","length","map","item","inventory_quantity","componentDidMount","fetchRequestedId","response","fetch","state","requestedId","method","headers","then","json","data","setState","daysDiffFinder","getInStock","velocityFinder","console","log","velocityObject","background","image","price","product_type","title","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;;AACA,MAAMC,iBAAiB,GAAGC,KAAK,IAAI;AAE/B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AACA,MAAIC,cAAc,GAAG,CAArB;AACA,MAAIC,gBAAgB,GAAGF,QAAQ,CAACG,MAAhC;AAEAH,EAAAA,QAAQ,CAACI,GAAT,CAAaC,IAAI,IAAE;AACfJ,IAAAA,cAAc,GAAGI,IAAI,CAACC,kBAAL,GAA0BL,cAA3C;AACH,GAFD;;AAGAM,EAAAA,iBAAiB,GAAG,MAAK;AACvBC,IAAAA,gBAAgB,GAAG,MAAMT,KAAN,IAAe;AAChC,YAAMU,QAAQ,GAAG,MAAMC,KAAK,6BACL,KAAKC,KAAL,CAAWC,WADN,GAE1B;AACEC,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAFX,OAF0B,CAAL,CASpBC,IAToB,CASfN,QAAQ,IAAI;AAChB,eAAOA,QAAQ,CAACO,IAAT,EAAP;AACD,OAXoB,EAYpBD,IAZoB,CAYfE,IAAI,IAAI;AACZ,aAAKC,QAAL,CAAc;AAAET,UAAAA,QAAQ,EAAEQ;AAAZ,SAAd;AACA,aAAKE,cAAL;AACA,aAAKC,UAAL;AACA,aAAKC,cAAL;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWa,cAAvB,EAAuC,qBAAvC;AACD,OAlBoB,CAAvB;AAmBD,KApBD;AAqBD,GAtBD;;AAuBF,SACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,0CADZ;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,iBAAU1B,KAAK,CAAC2B,KAAhB;AADL,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF,CADF,EAcE;AAAK,IAAA,SAAS,EAAG,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK3B,KAAK,CAACC,QAAN,CAAe,CAAf,EAAkB2B,KAAvB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK1B,cAAL,EAAsBC,gBAAgB,IAAI,CAArB,GAA0B,EAA1B,iBAAsCA,gBAAtC,CAArB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAAC6B,YAAX,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK7B,KAAK,CAAC8B,KAAX,CAJF,CAdF,EAoBM;AAAG,IAAA,IAAI,4CAAqC9B,KAAK,CAAC+B,EAA3C,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,KAAK,EAAC,iEAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,CApBN,CADF;AA8BD,CA9DD;;AAgEA,eAAehC,iBAAf","sourcesContent":["import React from \"react\";\nimport \"../App.css\";\nconst ProductComponenet = props => {\n\n    var variants = props.variants;\n    var totalInventory = 0;\n    var numberOfVariants = variants.length;\n    \n    variants.map(item=>{\n        totalInventory = item.inventory_quantity + totalInventory\n    }) \n    componentDidMount = () =>{\n      fetchRequestedId = async props => {\n        const response = await fetch(\n          `/api/v1/inventory/${this.state.requestedId}`,\n          {\n            method: \"GET\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          }\n        )\n          .then(response => {\n            return response.json();\n          })\n          .then(data => {\n            this.setState({ response: data });\n            this.daysDiffFinder();\n            this.getInStock();\n            this.velocityFinder();\n            console.log(this.state.velocityObject, \"after then function\");\n          });\n      };\n    }\n  return (\n    <div className=\"product-container\">\n      <div className=\"product-image-container\">\n        <div\n          className=\"demo-card-image mdl-card mdl-shadow--2dp\"\n          style={{\n            background: ` url(${props.image}) center / cover`\n          }}\n        >\n          <div className=\"mdl-card__title mdl-card--expand\" />\n          <div className=\"mdl-card__actions\">\n            <span className=\"demo-card-image__filename\"></span>\n          </div>\n        </div>\n      </div>\n      <div className = \"product-des-container\">\n        <h6>{props.variants[0].price}</h6>\n        <h6>{totalInventory}{(numberOfVariants == 1) ? '' : ` of ${numberOfVariants}`  }</h6>\n        <h6>{props.product_type}</h6>\n        <h6>{props.title}</h6>\n      </div>\n          <a href={`/a/dashboard/products/inventory/${props.id}`}>\n          <button class=\"mdl-button mdl-js-button mdl-button--raised mdl-button--colored\" >\n         Details\n        </button>\n          </a>\n        \n\n    </div>\n  );\n};\n\nexport default ProductComponenet;\n"]},"metadata":{},"sourceType":"module"}