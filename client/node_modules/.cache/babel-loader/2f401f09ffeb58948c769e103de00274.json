{"ast":null,"code":"var _jsxFileName = \"/Users/yazanalmatar/Desktop/dashboard/client/src/components/QRCodeGenerator.js\";\nimport React from \"react\";\nimport QRCode from \"qrcode-react\";\n\nclass QRCodeGenerator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeHandler = event => {\n      this.setState({\n        inputValue: event.target.value\n      });\n      var inputText = this.state.inputValue;\n\n      if (inputText.indexOf(\"youtube.\") >= 0 && inputText.indexOf(\" \") === -1) {\n        document.getElementById(\"qr-generator-label\").style.color = \"green\";\n        var youtubeURLARR = inputText.split(\"watch?v=\");\n        this.setState({\n          downloadName: youtubeURLARR[1]\n        });\n      } else {\n        document.getElementById(\"qr-generator-label\").style.color = \"red\";\n      }\n    };\n\n    this.prepHref = () => {\n      var myDiv = document.getElementById(\"generate-qr-wrapper\");\n      var canvas = myDiv.children[0];\n      var img = canvas.toDataURL(\"image/png\");\n      const rawURL = img;\n      const finalURL = rawURL.replace(\"data:image/png;base64,\", \"data:application/octet-stream;base64,\");\n      this.setState({\n        url: finalURL\n      });\n    };\n\n    this.biggerQR = () => {\n      this.toggleHander();\n      var currentSize = this.state.sizeValue;\n\n      if (currentSize < 270) {\n        this.setState({\n          sizeValue: currentSize + 10\n        });\n      }\n\n      console.log(currentSize);\n    };\n\n    this.smallerQR = () => {\n      var currentSize = this.state.sizeValue;\n\n      if (currentSize > 70) {\n        this.setState({\n          sizeValue: currentSize - 10\n        });\n      }\n\n      console.log(currentSize);\n    };\n\n    this.toggleHander = () => {\n      (function () {\n        'use strict';\n\n        var snackbarContainer = document.querySelector('#demo-snackbar-example');\n        var showSnackbarButton = document.querySelector('#demo-show-snackbar');\n\n        var handler = function (event) {\n          showSnackbarButton.style.backgroundColor = '';\n        };\n\n        (function () {\n          'use strict';\n\n          showSnackbarButton.style.backgroundColor = '#' + Math.floor(Math.random() * 0xFFFFFF).toString(16);\n          var data = {\n            message: 'Button color changed.',\n            timeout: 2000,\n            actionHandler: handler,\n            actionText: 'Undo'\n          };\n          snackbarContainer.MaterialSnackbar.showSnackbar(data);\n        })();\n      })();\n    };\n\n    this.state = {\n      inputValue: \"\",\n      url: \"\",\n      downloadName: \"\",\n      sizeValue: 128\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"generate-qr-main-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"demo-snackbar-example\",\n      className: \"mdl-js-snackbar mdl-snackbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mdl-snackbar__text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"mdl-snackbar__action\",\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"generate_qr_input\",\n      onChange: this.onChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"generate-qr-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(QRCode, {\n      value: this.state.inputValue,\n      logo: require(\"../assets/analuisa-icon.png\"),\n      logoWidth: 40,\n      size: this.state.sizeValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"a\", {\n      onClick: this.prepHref,\n      href: this.state.url,\n      download: this.state.downloadName,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Click To Download\"), React.createElement(\"div\", {\n      className: \"qr-size-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored\",\n      onClick: this.biggerQR,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"material-icons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"add\")), React.createElement(\"button\", {\n      className: \"mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored\",\n      onClick: this.smallerQR,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"-\")), React.createElement(\"label\", {\n      id: \"qr-generator-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.inputValue));\n  }\n\n}\n\nexport default QRCodeGenerator;","map":{"version":3,"sources":["/Users/yazanalmatar/Desktop/dashboard/client/src/components/QRCodeGenerator.js"],"names":["React","QRCode","QRCodeGenerator","Component","constructor","props","onChangeHandler","event","setState","inputValue","target","value","inputText","state","indexOf","document","getElementById","style","color","youtubeURLARR","split","downloadName","prepHref","myDiv","canvas","children","img","toDataURL","rawURL","finalURL","replace","url","biggerQR","toggleHander","currentSize","sizeValue","console","log","smallerQR","snackbarContainer","querySelector","showSnackbarButton","handler","backgroundColor","Math","floor","random","toString","data","message","timeout","actionHandler","actionText","MaterialSnackbar","showSnackbar","render","require"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport QRCode from \"qrcode-react\";\n\nclass QRCodeGenerator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      url: \"\",\n      downloadName: \"\",\n      sizeValue: 128\n    }; \n  }\n\n\n\n\n  onChangeHandler = event => {\n    this.setState({ inputValue: event.target.value });\n    var inputText = this.state.inputValue;\n    if (inputText.indexOf(\"youtube.\") >= 0 && inputText.indexOf(\" \") === -1) {\n      document.getElementById(\"qr-generator-label\").style.color = \"green\";\n      var youtubeURLARR = inputText.split(\"watch?v=\");\n      this.setState({ downloadName: youtubeURLARR[1] });\n    } else {\n      document.getElementById(\"qr-generator-label\").style.color = \"red\";\n    }\n  };\n  prepHref = () => {\n    var myDiv = document.getElementById(\"generate-qr-wrapper\");\n    var canvas = myDiv.children[0];\n    var img = canvas.toDataURL(\"image/png\");\n    const rawURL = img;\n    const finalURL = rawURL.replace(\n      \"data:image/png;base64,\",\n      \"data:application/octet-stream;base64,\"\n    );\n    this.setState({ url: finalURL });\n  };\n\n  biggerQR = () => {\n    this.toggleHander()\n    var currentSize = this.state.sizeValue;\n    if (currentSize < 270) {\n      this.setState({ sizeValue: currentSize + 10 });\n    }\n    console.log(currentSize);\n  };\n  smallerQR = () => {\n    var currentSize = this.state.sizeValue;\n    if (currentSize > 70) {\n      this.setState({ sizeValue: currentSize - 10 });\n    }\n    console.log(currentSize);\n  };\n\n  toggleHander = ()=>{\n    (function() {\n      'use strict';\n      var snackbarContainer = document.querySelector('#demo-snackbar-example');\n      var showSnackbarButton = document.querySelector('#demo-show-snackbar');\n      var handler = function(event) {\n        showSnackbarButton.style.backgroundColor = '';\n      };\n        (function() {\n        'use strict';\n        showSnackbarButton.style.backgroundColor = '#' +\n            Math.floor(Math.random() * 0xFFFFFF).toString(16);\n        var data = {\n          message: 'Button color changed.',\n          timeout: 2000,\n          actionHandler: handler,\n          actionText: 'Undo'\n        };\n        snackbarContainer.MaterialSnackbar.showSnackbar(data);\n      }())\n    }());\n  }\n\n\n  render() {\n    return (\n      \n      <div className=\"generate-qr-main-wrapper\">\n        <div id=\"demo-snackbar-example\" className=\"mdl-js-snackbar mdl-snackbar\">\n  <div className=\"mdl-snackbar__text\"></div>\n  <button className=\"mdl-snackbar__action\" type=\"button\"></button>\n</div>\n        <input\n          type=\"text\"\n          id=\"generate_qr_input\"\n          onChange={this.onChangeHandler}\n        />\n        <div id=\"generate-qr-wrapper\">\n          <QRCode\n            value={this.state.inputValue}\n            logo={require(\"../assets/analuisa-icon.png\")}\n            logoWidth={40}\n            size={this.state.sizeValue}\n          />\n        </div>\n        <a\n          onClick={this.prepHref}\n          href={this.state.url}\n          download={this.state.downloadName}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Click To Download\n        </a>\n\n        <div className=\"qr-size-buttons\">\n          <button\n            className=\"mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored\"\n            onClick={this.biggerQR}\n          >\n            <i className=\"material-icons\">add</i>\n          </button>\n          <button\n            className=\"mdl-button mdl-js-button mdl-button--fab mdl-js-ripple-effect mdl-button--colored\"\n            onClick={this.smallerQR}\n          >\n            -\n          </button>\n        </div>\n\n        <label id=\"qr-generator-label\">{this.state.inputValue}</label>\n      </div>\n    );\n  }\n}\n\nexport default QRCodeGenerator;\n"]},"metadata":{},"sourceType":"module"}